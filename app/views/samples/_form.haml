= cdx_form_for(@sample_form) do |f|
  .row
    .col
      - unless f.object.qc_info.nil?
        = f.form_field :quality_control do
          = link_to edit_qc_info_path(f.object.qc_info.id, sample_id: f.object.id), class: 'centered' do
            .icon-test.icon-blue
            = "VIEW QC INFO"

      = f.form_field :uuid, value: f.object.uuid

      - if f.object.batch_number
        = f.form_field :batch_id, value: blinded_attribute(@sample_form, :batch_number)

      - if box = @sample_form.box
        = f.fields_for :box, box do |g|
          = g.form_field :uuid, value: box.uuid, label: { text: "Box ID" }
          = g.form_field :purpose, value: box.purpose, label: { text: "Box Purpose" }

    .col.pe-5
      - if @show_barcode_preview
        = render "barcode_card"

  .row
    .col
      = f.form_field :date_produced do
        = f.date_field :date_produced, readonly: !@can_update

      = f.form_field :lab_technician do
        = f.text_field :lab_technician, :class => 'input-x-large', readonly: !@can_update

      = f.form_field :specimen_role do
        - if @can_update
          = cdx_select form: f, name: :specimen_role, searchable: true, :class => 'input-x-large' do |select|
            - select.items Sample.specimen_roles, :id, :description
        - else
          = text_field_tag :specimen_role, Sample.specimen_role_description(f.object.specimen_role), { :class => 'input-x-large', readonly: true }

      = f.form_field :virus_lineage do
        - if blinded_attribute?(@sample_form, :virus_lineage)
          .value= blinded_value
        - else
          = f.text_field :virus_lineage, class: 'input-x-large', readonly: !@can_update

      = f.form_field :isolate_name do
        = f.text_field :isolate_name, class: 'input-x-large', readonly: !@can_update

      = f.form_field :inactivation_method do
        - if @can_update
          = cdx_select form: f, name: :inactivation_method, searchable: false do |select|
            - select.items Sample.inactivation_methods
        - else
          = f.text_field :inactivation_method, readonly: true

      = f.form_field :volume do
        .row.input-unit
          = f.number_field :volume, min: 0, step: :any, :class => "input-small", readonly: !@can_update
          .span.unit (μl)

      = f.form_field :concentration do
        - if blinded_attribute?(@sample_form, :concentration)
          .value= blinded_value
        - else
          = f.number_field :concentration_number, min: 1, step: 1, readonly: !@can_update, class: "input-small"
          × 10^-(
          = f.number_field :concentration_exponent, min: 1, step: 1, readonly: !@can_update, class: "input-small"
          )
          = f.field_errors :concentration_number
          = f.field_errors :concentration_exponent

      = f.form_field :replicate do
        - if blinded_attribute?(@sample_form, :replicate)
          .value= blinded_value
        - else
          = f.number_field :replicate, min: 0, step: 1, class: "input-small", readonly: !@can_update

      = f.form_field :media do
        - if @can_update
          = cdx_select form: f, name: :media, searchable: false do |select|
            - select.item "", " "
            - select.items Sample.media
        - else
          = f.text_field :media, readonly: true

  .col
    = render (@can_update ? 'form_assays' : 'show_assays'), f: f

  .col
    = render (@can_update ? 'form_notes' : 'show_notes'), f: f

  - if @can_update
    = f.form_actions do
      = f.submit 'Save', class: 'btn-primary', id: 'btn-save'
      = link_to 'Cancel', @view_helper[:back_path], class: 'btn-link'

      - if @can_delete
        = confirm_deletion_button @sample_form, 'sample'
