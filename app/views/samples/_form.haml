= form_for(@sample) do |f|

  = validation_errors @sample

  .row
    .col
      .row
        .col.pe-4
          = f.label :uuid
        .col
          .value= f.object.uuid
      .row
        .col.pe-4
          = f.label :isolate_name
        .col
          = f.text_field :isolate_name, :class => 'input-x-large'
      .row
        .col.pe-4
          = f.label :production_date
        .col
          = f.text_field :production_date, placeholder: @view_helper[:production_date_placeholder]
      .row
        .col.pe-4
          = f.label :inactivation_method
        .col
          = cdx_select form: f, name: :inactivation_method, searchable: false do |select|
            - select.items Sample::INACTIVATION_METHOD_VALUES
      .row
        .col.pe-4
          = f.label :volume
        .col
          .row.input-unit
            = f.number_field :volume, min: 0, step: :any, :class => "input-small"
            .span.unit (Î¼l)
      .row
        .col.pe-4
          = f.label :lab_technician
        .col
          = f.text_field :lab_technician, :class => 'input-x-large'
      .row
        .col.pe-4
          = f.label :is_quality_control, "quality control"
        .col
          = f.check_box :is_quality_control
          = f.label :is_quality_control, "&nbsp;".html_safe
    - if @show_barcode_preview
      .col.pe-5
        = render "barcode_card"

  -# = f.fields_for :test_qc_result, @sample.test_qc_result do |qc|
  -#   .row
  -#     .col.pe-2
  -#       = qc.label :test_qc_result_assays, "Assays"
  -#     .col
  -#       .choose-picture.assay
  -#         .upload-new-file.picture
  -#           = qc.fields_for :test_qc_result_assays do |ay|
  -#             .file-uploaded.picture-container
  -#               = image_tag ay.object.picture.url(:card)
  -#               .picture-title
  -#                 = ay.object.picture_file_name
  -#               .clear-label
  -#                 = ay.check_box '_destroy', { id: "destroy_assay_#{ay.object.id}" }
  -#                 %label.cross{:for => "destroy_assay_#{ay.object.id}" }
  -#                   = image_tag "ic-cross.png"

  -#           = qc.file_field :files, :class => "upload-picture",  accept: 'image/png,image/jpeg,image/gif', multiple: true
  -#       .actions
  -#         = button_tag id: 'undo_added_files', class: 'btn-link hidden' do
  -#           .icon-close.btn-icon
  -#           Undo added files

  -# .row
  -#   .col.pe-2
  -#     = f.label :notes
  -#   #notes.col
  -#     = f.fields_for :notes, @sample.notes do |note|
  -#       .note
  -#         .info
  -#           = "by #{note.object.user.full_name} #{@localization_helper.format_datetime(note.object.updated_at)} "
  -#           .clear-note
  -#             = note.check_box '_destroy', { id: "destroy_note_#{note.object.id}" }
  -#             %label.cross{:for => "destroy_note_#{note.object.id}" }
  -#               = image_tag "ic-cross.png"
  -#         .description
  -#           = note.object.description
  -#         .dashed-line
  -# .row
  -#   .col.pe-2
  -#     = f.label :notes, "&nbsp;".html_safe
  -#   .col.notes-input
  -#     = text_field_tag "new-note","", {id: "new-note", placeholder: "Add Note"}
  -#     .actions
  -#       = button_tag id: 'add-note', class: 'btn-link' do
  -#         .icon-circle-plus.icon-blue.icon-margin


  .row.button-actions
    .col
      = f.submit 'Save', class: 'btn-primary'
      = link_to 'Cancel', sample_or_batch_creation_batches_path, class: 'btn-link'

      - if @can_delete
        = confirm_deletion_button @sample, 'sample'

= render 'form_js'
