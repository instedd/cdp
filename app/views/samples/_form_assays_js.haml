:javascript
  (function() {
    dropzoneOptions = {
      paramName: "file",
      autoProcessQueue: false,
      uploadMultiple: true,
      url: 'cualquiercosa',
      addedfile: function(file) {
        //createCard(file)
      },
      thumbnail: function(file, url) {
        var cards = $('.updating');
        cards.removeClass('updating');

        if(cards.length > 1) {
          //this should not happen, but to be safe we clear it and do nothing
          return;
        }

        if(cards.length == 1) {
          var card = cards[0];
          $(card).find('.file').off('click');
          updateCard(card, file, url);
        } else{
          createCard(file, url);
        }

        updateAddAssaysControls();
      },
      maxFilesize: 2
    }

    new Dropzone('#dropzone-field', dropzoneOptions)

    // Click on Add Assays
    $('#add-assays').on('click', function(e) {
      e.preventDefault();
      createCardWithoutFile()
    });

    // Change the class on the target zone when dragging a file over it
    $(".remove > input[type='checkbox']").on('click', function(e) {
      $(this).closest('.file-uploaded').addClass('remove');
    });

    $('.assay > .upload-new-file').on('scroll', function(e) {
      var scrollDiff = $(this).scrollTop();
      // move dropzone-input into view
      $('.upload-picture').css('top', scrollDiff);
    });

    // Reset
    $('#undo-added-assays').on('click', function(e) {
      e.preventDefault();

      removeFilesPreview();

      // toggle buttons
      $('#undo-added-assays').addClass('nodisplay');

      // render Tooltip and Add-assays action
      updateAddAssaysControls();

      // remove files from input FileList
      var emptyClonedInput = $('#sample_new_assays').val('').clone(true);
      $('#sample_new_assays')
        .replaceWith(emptyClonedInput);
    });

    // initial state for Tooltip and Add-assays action
    updateAddAssaysControls();

    // create loinc inputs
    $('.loinc_inputs').each(function(index, element){
      var input = $(element).find('.loinc_input');
      var hidden = $(element).find('.loinc_input_hidden');
      $(element).replaceWith(buildLoincCodeSelect({
        input: input,
        hidden: hidden
      }));
    });

  })();

  document.addEventListener("dragenter", function( event ) {
    if ( event.target.className == "upload-picture" ) {
      $('.choose-picture').addClass('on');
    }

  }, false);

  document.addEventListener("dragleave", function( event ) {
    if ( event.target.className == "upload-picture" ) {
      $('.choose-picture').removeClass('on');
    }
  }, false);

  function removeFilesPreview() {
    // remove all new-files preview
    $('.new-file').remove();
  }

  function updateAddAssaysControls() {
    var assays = $('.assay-file');
    if (assays.length > 0) {
      $('.assay > .upload-new-file > .tooltip').addClass('nodisplay');
    } else {
      $('.assay > .upload-new-file > .tooltip').removeClass('nodisplay');
    }
  }

  function createCardWithoutFile() {
    $('.assay > .upload-new-file').append(
      $('<div>', { class: 'file-uploaded' })
        .append($('<div>', { class: 'card-container new-file' })
          .append(createCardInfoColumnWithoutFile())
          .append(createCardPictureColumnWithoutFile())
          .append(createCardRemove())
        )
    );
  }

  function createCard(file, url) {
    $('.assay > .upload-new-file').append(
        $('<div>', { class: 'file-uploaded' })
          .append($('<div>', { class: 'card-container new-file' })
            .append(createCardInfoColumn(file))
            .append(createCardPictureColumn(file, url))
            .append(createCardRemove(file))
          )
    );
  }

  function updateCard(card, file, url) {
    updateCardInfoColumn(card, file)
    updateCardPictureColumn(card, file, url)
    updateCardRemove(card, file)
  }

  function createCardInfoColumnWithoutFile() {
    return $('<div>', { class: 'info' })
      .append($('<div>', { class: 'row' })
        .append($('<div>', { class: 'col pe-1' })
          .append($('<label>', { for: 'new_sample_assay_attachments_attributes', text: 'Loinc' })))
        .append($('<div>', { class: 'col pe-8' })
          .append(buildLoincCodeSelect()))
      )
      .append($('<div>', { class: 'row' })
        .append($('<div>', { class: 'col pe-1' })
          .append($('<label>', { for: 'new_sample_assay_attachments_attributes', text: 'Result' })))
        .append($('<div>', { class: 'col pe-8' })
          .append($('<input>', { type: 'text', class: 'result_input', name: `sample[new_assays_info][][result]` } )))
      )
      // .append($('<div>')
      //   .append($('<input>', { type: 'hidden', name: 'sample[new_assays_info][][filename]', value: file.name } )))
  }


  function createCardInfoColumn(file) {
    return $('<div>', { class: 'info' })
      .append($('<div>', { class: 'row' })
        .append($('<div>', { class: 'col pe-1' })
          .append($('<label>', { for: 'new_sample_assay_attachments_attributes', text: 'Loinc' })))
        .append($('<div>', { class: 'col pe-8' })
          .append(buildLoincCodeSelect()))
      )
      .append($('<div>', { class: 'row' })
        .append($('<div>', { class: 'col pe-1' })
          .append($('<label>', { for: 'new_sample_assay_attachments_attributes', text: 'Result' })))
        .append($('<div>', { class: 'col pe-8' })
          .append($('<input>', { type: 'text', class: 'result_input', name: `sample[new_assays_info][][result]` } )))
      )
      .append($('<div>')
        .append($('<input>', { type: 'hidden', name: 'sample[new_assays_info][][filename]', value: file.name } )))
  }

  function updateCardInfoColumn(card, file) {
    var cardInfo = $(card).find('.info')
    cardInfo.find('div > input[name="sample[new_assays_info][][filename]"]').remove()
    cardInfo
      .append($('<div>')
        .append($('<input>', { type: 'hidden', name: 'sample[new_assays_info][][filename]', value: file.name } )))

  }


  function createCardPictureColumn(file, url) {
    return $('<div>', { class: 'file' })
            .append(
              $('<div>', { class: 'picture-container assay-file'})
              .append(fileThumbnail(file, url))
              .append($('<div>', { class: 'picture-title', title: file.name })
              .append($('<div>').text(file.name)))
            )
  }

  function updateCardPictureColumn(card, file, url) {
    var cardFile = $(card).find('.file')
    cardFile.empty()
    cardFile
      .append(
        $('<div>', { class: 'picture-container assay-file'})
          .append(fileThumbnail(file, url))
          .append($('<div>', { class: 'picture-title', title: file.name })
          .append($('<div>').text(file.name)))
      )
  }

  function createCardPictureColumnWithoutFile() {
    var fileContainer = $('<div>', { class: 'file' })
    fileContainer.on('click', function() {
      var card = $(this).parents('.file-uploaded');
      card.addClass('updating');
      $('#dropzone-field').click();
    });

    return fileContainer
            .append(
              $('<div>', { class: 'picture-container assay-file'}).append(
                $('<div>', { class: 'any-filetype' })
                  .append($('<div>', { class: 'icon-document'}))
              )
            );
  }

  function createCardRemove(file) {
    var removeButton = $('<div>', { class: 'remove' }).append($('<img>', { src: '#{asset_url('ic-cross.png')}', alt: 'Ic cross'}));
    removeButton.on('click', function() {
      if (file) {
        Dropzone.forElement("#dropzone-field").removeFile(file);
      }
      $(this).parents('.file-uploaded').remove();
    });
    return removeButton;
  }

  function updateCardRemove(card, file) {
    var cardRemove = $(card).find('.remove')
    cardRemove.on('click', function() {
      if (file) {
        Dropzone.forElement("#dropzone-field").removeFile(file);
      }
      $(this).parents('.file-uploaded').remove();
    });
  }

  function fileThumbnail(file, url) {
    if (file.type.startsWith('image/')) {
      return $('<img>', { class: 'uploaded', src: url });
    } else {
      return $('<div>', { class: 'any-filetype' })
        .append($('<div>', { class: 'icon-document'}));
    }
  }

  function buildLoincCodeSelect(config) {
    var loincInput = (config && config.input) ? config.input : $('<input>', {type: 'text', class: 'loinc_input'});
    var loincInputHidden = (config && config.hidden) ? config.hidden : $('<input>', {type: 'hidden', name: `sample[new_assays_info][][loinc_code_id]`});

    loincInput.autocomplete({
      lookup: function (query, done) {
          $.ajax({
            url: '/loinc_codes/search',
            data: { q: query },
            success: function(loincCodes) {
              done({suggestions: loincCodes});
            }
          });
      },
      onSelect: function (suggestion) {
        loincInputHidden.val(suggestion.id)
      }
    });

    return $('<div>').append(loincInput).append(loincInputHidden)[0];
  }
