:javascript
    var getUrlParameter = function getUrlParameter(sParam) {
        var sPageURL = window.location.search.substring(1),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
            }
        }
        return false;
    };

    var checkUploadEnabling = function checkUploadEnabling() {
        // Enable upload button if there are uploaded files
        if (document.getElementById('uploaded-files').innerHTML != "") 
            document.getElementById(`bulk_process_csv`).disabled = false;
        else 
            document.getElementById(`bulk_process_csv`).disabled = true;
    }

    function handleFileSelect(evt) {
        // We use the 1st file from the FileList list
        let f = evt.target.files[0];
        let reader = new FileReader();

        // Closure to capture the file information.
        reader.onload = (function(f) {
            return async(e) => {
                var now = evt.target.nowParam
                // Parse the input file
                var text =  e.target.result
                var lines = text.split(/\r\n|\r|\n/); // tolerate both Windows and Unix linebreaks
                var samples_param = [] // params for GET call
                var samples = [] // samples uuids

                lines.forEach(function(line) { 
                    if (line != ''){
                        samples_param.push( 'uuids[]=' + line.split(',')[0] );
                        samples.push( line.split(',')[0] );
                    } 
                });
                
                // Retrieve found uuids
                var context = getUrlParameter('context');
                var url = '/samples/existing_uuids?context='+context+"&"+samples_param.join("&")
                var found = await fetch(url)
                    .then((response) => response.json())
                    .then((r) => {
                        return r.message;
                })
                // Compute not found ones
                var not_found = samples.filter(function(x) {
                    return found.indexOf(x) < 0;
                });
                
                // Create row from template with filename and upload info
                var template = document.getElementById(`csvFileRow`).content;
                var fragment = template.cloneNode(true);
                fragment.querySelector(`.upload_info`).id = `upload_info_${now}`
                fragment.querySelector(`.uploaded-samples-count`).textContent = `${samples.length} Samples ` ;
                if (found.length != samples.length){
                    fragment.querySelector(`.uploaded-samples-count`).innerHTML += `(<span class="dashed-underline">${(not_found.length)} sample UUID${(not_found.length>1?'s':'')}</span> not found) `
                    fragment.querySelector(`.upload-icon`).className += ` icon-alert icon-red`
                    fragment.querySelector(`.samples-row-action`).className += ` ttip input-required`
                    fragment.querySelector(`.not_found_message`).id = `not_found_message_${now}`;
                }
                else {
                    fragment.querySelector(`.upload-icon`).className += ` icon-checkmark`
                }
                fragment.querySelector(`.remove_file`).id = `remove_file_${now}`;
                fragment.querySelector(`.file-name`).textContent = `${f.name}`;
                
                document.getElementById(`uploaded-files`).append(fragment)
                
                // if samples were not found add mouse behaviour to display tooltip
                if (found.length != samples.length) {
                    document.getElementById(`not_found_message_${now}`).addEventListener('click', 
                        function() {
                            if (!document.getElementById(`ttext_${now}`)){
                                var tooltip = document.createElement("span")
                                tooltip.className = `ttext`
                                tooltip.id = `ttext_${now}`
                                tooltip.style = `color:red; width: 300px;`
                                tooltip.innerHTML = `${not_found.slice(0,5).join("<br>")}`
                                document.getElementById(`not_found_message_${now}`).append(tooltip)
                                setTimeout( () => tooltip.remove() , 5000 );
                            }
                            else {
                                document.getElementById(`ttext_${now}`).remove()
                            }
                        }
                    )
                }
                
                // Bind click event to remove button
                document.getElementById(`remove_file_${now}`).addEventListener('click', 
                    function() {
                        document.getElementById(`upload_info_${now}`).remove();
                        document.getElementById(`csv_file_${now}`).remove();
                        checkUploadEnabling();
                    }
                );

                checkUploadEnabling();
            }
        })(f);

        reader.readAsText(f);
    }

    // Upon pressing the "Add file" button we will create a file input and click it
    $("#add-results-file").on('click', function (e) {
        // Use identifier = now for all the elements of the row of files that will be created
        var now = Date.now()

        var template = document.getElementById(`csvInputFile`).content;
        var fragment = template.cloneNode(true);
        fragment.querySelector(`.csv_file`).id = `csv_file_${now}`;
        document.getElementById(`uploaded-files`).append(fragment)
        
        document.getElementById(`csv_file_${now}`).nowParam = now;
        document.getElementById(`csv_file_${now}`).addEventListener('change', handleFileSelect, false);
        document.getElementById(`csv_file_${now}`).click();


    })

    
