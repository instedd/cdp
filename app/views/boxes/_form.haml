= cdx_form_for(@box_form) do |f|
  .row
    .col
      .row.form-field
        .col.form-field__label
          %label Purpose
        .col
          = cdx_select form: f, name: :purpose, searchable: false, :class => 'input-large' do |select|
            - select.items Box.purposes

      = f.form_field :media do
        = cdx_select form: f, name: :media, searchable: false, class: "input-large" do |select|
          - select.items Sample.media

      .row.form-field
        .col.form-field__label
          %label Samples
        .col.radiotoggle
          = f.radio_button :samples, "add_batch"
          = f.label :samples, "Create new samples", value: "add_batch"
          = f.radio_button :samples, "add_samples"
          = f.label :samples, "Select samples from inventory", value: "add_samples"

      .row.form-field
        .col.form-field__label
          %label Contents
        .col
          %fieldset#add_batch{ :disabled => "true", :style => "display: none" }
            = f.form_field "lod", label: { text: "Batch", class: "is-normal-case" }, full_message: false do
              = react_component "CdxSelectAutocomplete", { url: autocomplete_batches_path(format: "json", context: params[:context]),
                name: "box[batch_uuids][lod]", value: @box_form.batch_uuids["lod"],
                placeholder: "Enter batch id", className: "input-block" }

          %fieldset#add_samples{ :disabled => "true", :style => "display: none" }
            = react_component "SamplesSelector", { url: autocomplete_samples_path(format: "json", context: params[:context], qc: 0),
              name: "box[sample_uuids]", placeholder: "Enter sample id", className: "input-block",
              samples: samples_data(@box_form.samples) }

  .row
    .col
      = f.check_box :blinded
      = f.label :blinded, "Blind samples (you'll be able to unblind them later from transfer details)"

  = f.form_actions do
    = f.submit 'Save', class: 'btn-primary', id: 'btn-save'
    = link_to 'Cancel', boxes_path, class: 'btn-link'
