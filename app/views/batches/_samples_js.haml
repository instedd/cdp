:javascript
  (function() {
    $("#bulk_print").click(function(event) {
      event.preventDefault();

      var ids = selectedSampleIds();
      if (ids.length <= 0) return;

      bulkPrint(selectedSampleIds());
    });

    $("#bulk_destroy").click(function(event) {
      event.preventDefault();

      var ids = selectedSampleIds();
      if (ids.length <= 0) return;

      bulkDestroy(ids);
      enableUndoDestroyAction();
    });

    $("#bulk_destroy_undo").click(function(event) {
      event.preventDefault();
      bulkUndoDestroy();
      enableDestroyAction();
    });

    // Logic for Select All/None checkbox
    var allSamplesCheckbox = $("#select_all_samples");

    allSamplesCheckbox.click(function(event) {
      toggleSelectAllSamples(this.checked);
    });

    // when all checkboxes unselected then uncheck Select All/None checkboxes
    $(".samples-item > input[type=checkbox].select-checkbox").change(function() {
      var selectedCount = findSelectCheckboxes().filter(":checked").length
      if (selectedCount == 0) {
        allSamplesCheckbox.prop("checked", false);
      }
    });
  })();

  function enableDestroyAction() {
    $("#bulk_destroy")
      .removeClass("hidden");

    $("#bulk_destroy_undo")
      .addClass("hidden");
  }

  function enableUndoDestroyAction() {
    $("#bulk_destroy")
      .addClass("hidden");

    $("#bulk_destroy_undo")
      .removeClass("hidden");
  }

  function selectedSampleIds() {
    return findSelectCheckboxes().filter(":checked")
      .map(function(index, elem) {
        return elem.value;
      })
      .toArray();
  }

  function bulkPrint(sampleIds) {
    var url = createBulkActionURL("print", sampleIds);
    window.open(url, "_blank");
  }

  function bulkDestroy(sampleIds) {
    sampleIds.forEach(function(id) {

      findSampleRow(id)
        .addClass("mark-destroy");

      findSampleSelectCheckbox(id)
        .prop("checked", true);

      findSampleDestroyCheckbox(id)
        .prop("checked", true);
    })
  }

  function bulkUndoDestroy() {
    $(".mark-destroy")
      .removeClass("mark-destroy");

    findAllCheckboxes()
      .prop("checked", false)
      .change();
  }

  function toggleSelectAllSamples(selected) {
    findSelectCheckboxesNotMarkedForDestroyed()
      .prop("checked", selected)
      .change();
  }

  function createBulkActionURL(action, sampleIds) {
    var url = new URL("#{ javascript_url Rails.application.routes.url_helpers.bulk_action_samples_path }");
    url.searchParams.append("bulk_action", action);
    sampleIds.forEach(function(sampleId) {
      url.searchParams.append("sample_ids[]", sampleId);
    });

    return url;
  }

  // DOM Queries
  function findSelectCheckboxes() {
    return $(domQueries.selectCheckboxes);
  }

  function findDestroyCheckboxes() {
    return $(domQueries.destroyCheckboxes);
  }

  function findSelectCheckboxesNotMarkedForDestroyed() {
    return $(".samples-row").not(".mark-destroy").find(domQueries.selectCheckboxes);
  }

  function findAllCheckboxes() {
    return $(domQueries.allCheckboxes);
  }

  function findSampleRow(sampleId) {
    return $(domQueries.sampleRow(sampleId));
  }

  function findSampleSelectCheckbox(sampleId) {
    return $(domQueries.sampleSelectCheckbox(sampleId));
  }

  function findSampleDestroyCheckbox(sampleId) {
    return $(domQueries.sampleDestroyCheckbox(sampleId));
  }

  var domQueries = {
    allCheckboxes: ".samples-item > input[type=checkbox]",
    selectCheckboxes: ".samples-item > input[type=checkbox].select-checkbox",
    destroyCheckboxes: ".samples-item > input[type=checkbox].destroy-checkbox",
    sampleRow: function(sampleId) { return ".samples-row:has(.samples-item > input[id=sample_ids_" + sampleId + "])" },
    sampleSelectCheckbox: function(sampleId) { return "#sample_ids_" + sampleId },
    sampleDestroyCheckbox: function(sampleId) { return "#destroy_sample_ids_" + sampleId }
  }
