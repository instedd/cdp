= cdx_form_for(@batch_form) do |f|
  .row
    .col
      = f.form_field :batch_number do
        = f.text_field :batch_number, readonly: !@can_update

      = f.form_field :date_produced do
        = f.text_field :date_produced, placeholder: Batch.date_produced_placeholder, readonly: !@can_update

      = f.form_field :lab_technician do
        = f.text_field :lab_technician, :class => 'input-x-large', readonly: !@can_update

      = f.form_field :specimen_role do
        - if @can_update
          = cdx_select form: f, name: :specimen_role, searchable: true, :class => 'input-x-large' do |select|
            - select.items Batch.specimen_roles, :id, :description
        - else
          = text_field_tag :specimen_role, Batch.specimen_role_description(f.object.specimen_role), { :class => 'input-x-large', readonly: true }

      = f.form_field :isolate_name do
        = f.text_field :isolate_name, :class => 'input-x-large', readonly: !@can_update

      = f.form_field :inactivation_method do
        - if @can_update
          = cdx_select form: f, name: :inactivation_method, searchable: false do |select|
            - select.items Batch.inactivation_methods
        - else
          = f.text_field :inactivation_method, readonly: true

      = f.form_field :volume do
        .row.input-unit
          = f.number_field :volume, min: 0, step: :any, :class => "input-small", readonly: !@can_update
          .span.unit (Î¼l)

      - if @can_edit_sample_quantity
        = f.form_field :samples_quantity do
          = f.number_field :samples_quantity, min: 0, :class => "input-small"
      - else
        = f.form_field :samples do
          = render (@can_update ? 'samples' : 'show_samples')

  - if @can_update
    = f.form_actions do
      = f.submit 'Save', class: 'btn-primary'
      = link_to 'Cancel', batches_path, class: 'btn-link'

      - if @can_delete
        = confirm_deletion_button @batch_form, 'batch'
