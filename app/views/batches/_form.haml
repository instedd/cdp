= cdx_form_for(@batch_form) do |f|
  .row
    .col
      = f.form_field :batch_number do
        = f.text_field :batch_number, readonly: !@can_update
        %button.btn-copy.ttip
          = icon_tag "copy", class: "btn-icon"

      = f.form_field :date_produced do
        = f.date_field :date_produced, readonly: !@can_update

      = f.form_field :lab_technician do
        = f.text_field :lab_technician, :class => 'input-x-large', readonly: !@can_update

      = f.form_field :specimen_role do
        - if @can_update
          = cdx_select form: f, name: :specimen_role, searchable: true, :class => 'input-x-large' do |select|
            - select.items Batch.specimen_roles, :id, :description
        - else
          = text_field_tag :specimen_role, Batch.specimen_role_description(f.object.specimen_role), { :class => 'input-x-large', readonly: true }

      = f.form_field :virus_lineage do
        = f.text_field :virus_lineage, :class => 'input-x-large', readonly: !@can_update

      = f.form_field :isolate_name do
        = f.text_field :isolate_name, :class => 'input-x-large', readonly: !@can_update

      = f.form_field :inactivation_method do
        - if @can_update
          = cdx_select form: f, name: :inactivation_method, searchable: false do |select|
            - select.items Batch.inactivation_methods
        - else
          = f.text_field :inactivation_method, readonly: true

      = f.form_field :volume do
        .row.input-unit
          = f.number_field :volume, min: 0, step: :any, :class => "input-small", readonly: !@can_update
          .span.unit (Î¼l)

      = f.form_field :reference_gene do
        = autocomplete_field(f, "batch[reference_gene]", :reference_gene, @navigation_context.institution, class: "input-x-large")

      = f.form_field :target_organism_taxonomy_id do
        = autocomplete_field(f, "batch[target_organism_taxonomy_id]", :target_organism_taxonomy_id, @navigation_context.institution, class: "input-x-large")

      = f.form_field :pango_lineage do
        = autocomplete_field(f, "batch[pango_lineage]", :pango_lineage, @navigation_context.institution, class: "input-x-large")

      = f.form_field :who_label do
        = autocomplete_field(f, "batch[who_label]", :who_label, @navigation_context.institution, class: "input-x-large")

      - if @can_edit_sample_quantity
        = f.form_field :samples_quantity do
          = f.number_field :samples_quantity, min: 0, :class => "input-small"
      - else
        = f.form_field :samples do
          = render (@can_update ? 'samples' : 'show_samples')

  - if @can_update
    = f.form_actions do
      = f.submit 'Save', class: 'btn-primary'
      = link_to 'Cancel', batches_path, class: 'btn-link'

      - if @can_delete
        = confirm_deletion_button @batch_form, 'batch'

= form_tag bulk_action_samples_path(format: "pdf"), method: :post, style: "display: none", id: "bulk_print_form", target: "_blank" do
  = hidden_field_tag :bulk_action, "print"
