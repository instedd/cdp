= render "filters"

.row
  .col
    - if @tests.empty?
      = empty_data icon: 'icon-outline-test xx-large' do |c|
        - c.body do
          %h1 No tests has been reported
          %p Setup your devices first in order to start reporting
    - else
      = cdx_table title: pluralize(@total, "test") do |t|
        - t.columns do
          - each_test_column do |id, title, opts|
            %col{:width => opts[:width]}
        - t.actions do
          = link_to test_results_path(@filter.merge(format: :csv).merge(display_as: @display_as)), title: 'Download CSV' do
            .icon-download.icon-gray
        - t.thead do
          %tr
            - each_test_column do |id, title, opts|
              %th= opts[:sortable] ? order_by_column(title, id) : title
        - t.tbody do
          - @tests.each do |test|
            %tr{data: {href: @display_as == "test" ? test_result_path(test['test']['uuid']) : encounter_path(test['encounter']['uuid']) }}
              - each_test_column do |id|
                %td= formatted_test_value(test, id, web: true)

      .pagination
        = render 'shared/pagination'
        - if @display_as == "test"
          = link_to "Add filter", new_filter_path(query: @filter), class: 'pull-right'
