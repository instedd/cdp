= form_for @role do |f|
  - if @role.errors.any?
    #error_explanation
      %p= "#{pluralize(@role.errors.count, "error")} prohibited this role from being saved:"
      %ul
        - @role.errors.full_messages.each do |msg|
          %li= msg

  .row
    .col.pe-2
      = f.label :name
    .col
      = f.text_field :name

  - if @accessible_institutions != 1
    .row
      .col.pe-2
        = f.label :institution_id
      .col
        .value= @institution

  - if @role.new_record?
    .row
      .col.pe-2
        = f.label :site_id
      .col
        = cdx_select form: f, name: :site_id, class: 'input-x-large' do |select|
          - select.item "", "Choose one"
          - select.items @sites, :id, :name
  - elsif @role.site_id
    .row
      .col.pe-2
        = f.label :site_id
      .col
        .value= @role.site.try(:name)
  %br
  %br
  %hr
  %br
  .row
    .col
      %h1 Policies
      %p.text-small.muted
        %i Policies grant users permisions over specific resources
  = react_component 'PolicyDefinition', definition: @role.definition, actions: actions_per_resource_type, context: params['context'], resources: @policy_definition_resources, resourceTypes: resource_types
  .row.button-actions
    .col
      = f.submit 'Save', :class => 'btn-primary'
      = link_to 'Cancel', roles_path, class: 'btn-link'
      - if @can_delete
        - unless @role.new_record?
          = confirm_deletion_button @role, 'role'
