name: CI

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    branches:
      - "**"

  pull_request:
    branches:
      - "**:**"

env:
  COMPOSE_FILE: docker-compose.yml:docker-compose.ci.yml
  COMPOSE_DEFAULT_SERVICE: web

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/docker-cache
        with:
          docker-images: cdx_web cdx_csv_watch cdx_ftp_monitor cdx_sidekiq
      - uses: ./.github/actions/gems-cache

  unit_tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/docker-cache
      - uses: ./.github/actions/gems-cache

      - name: Setup databases
        run: |
          docker-compose up -d db elasticsearch redis
          docker-compose run --rm -e RAILS_ENV=test web bundle exec rake db:setup db:test:prepare elasticsearch:setup

      - name: Run specs
        run: docker-compose run --rm -e RAILS_ENV=test web bundle exec rspec

  integration_tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/docker-cache
      - uses: ./.github/actions/gems-cache

      - name: Setup databases
        run: |
          docker-compose up -d db elasticsearch redis
          docker-compose run --rm -e RAILS_ENV=test web bundle exec rake db:setup db:test:prepare elasticsearch:setup

      - name: Run specs (capybara)
        run: docker-compose run --rm -e RAILS_ENV=test web bundle exec rspec spec/features/**

      - name: Run specs (cucumber)
        run: docker-compose run --rm -e RAILS_ENV=test web bundle exec cucumber

  build:
    runs-on: ubuntu-latest
    needs:
      - unit_tests
      - integration_tests
    if: contains('refs/heads/main', github.ref) || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/preview/') || startsWith(github.ref, 'refs/tags/')

    env:
      DOCKER_REPOSITORY: 'instedd/cdx'
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
      - uses: actions/checkout@v2
      - name: Build image & push to Docker Hub
        run: ./build.sh
