name: CI

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    branches:
      - "**"

  pull_request:
    branches:
      - "**:**"

env:
  DOCKER_COMPOSE: docker-compose -f docker-compose.yml -f docker-compose.ci.yml

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: docker-cache
        with:
          path: tmp/docker
          key: Docker-v2-${{ hashFiles('Dockerfile-dev', 'docker-compose.yml', '/docker-compose.ci.yml') }}
          restore-keys: |
            Docker-v2-

      - name: Load Docker image
        if: steps.docker-cache.outputs.cache-hit == 'true'
        run: |
          docker load < tmp/docker/docker_images.tar

      - name: Build Docker image
        if: steps.docker-cache.outputs.cache-hit != 'true'
        run: |
          $DOCKER_COMPOSE build
          docker save cdx_web cdx_csv_watch cdx_ftp_monitor cdx_sidekiq > tmp/docker/docker_images.tar

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ hashFiles('.ruby-version') }}-
            ${{ runner.os }}-gems-

      - name: Install dependencies
        run: |
          $DOCKER_COMPOSE run --rm --no-deps -e RAILS_ENV=test web bundle install --jobs 4
          $DOCKER_COMPOSE run --rm --no-deps -e RAILS_ENV=test web bundle clean --force

      - name: Setup databases
        run: |
          $DOCKER_COMPOSE up -d db elasticsearch redis
          $DOCKER_COMPOSE run --rm -e RAILS_ENV=test web bundle exec rake db:setup db:test:prepare elasticsearch:setup

      - name: Start services
        run: $DOCKER_COMPOSE up -d sshd csv_watch ftp_monitor sidekiq

      - name: Run specs
        run: $DOCKER_COMPOSE run --rm -e RAILS_ENV=test web bundle exec rspec

      - name: Run integration specs (rspec + capybara)
        run: $DOCKER_COMPOSE run --rm -e RAILS_ENV=test web bundle exec rspec spec/features/**

      - name: Run integration specs (cucumber)
        run: $DOCKER_COMPOSE run --rm -e RAILS_ENV=test web bundle exec cucumber

  build:
    runs-on: ubuntu-latest
    needs: test
    if: contains('refs/heads/main', github.ref) || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/preview/') || startsWith(github.ref, 'refs/tags/')

    env:
      DOCKER_REPOSITORY: 'instedd/cdx'
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
      - uses: actions/checkout@v2
      - name: Build image & push to Docker Hub
        run: ./build.sh
